import speech_recognition as sr
import pyttsx3
import datetime
import webbrowser

# Initialize the recognizer and the text-to-speech engine
recognizer = sr.Recognizer()
tts_engine = pyttsx3.init()

# Function to convert text to speech
def speak(text):
    print(f"\nSpeaking: {text}\n")
    tts_engine.say(text)
    tts_engine.runAndWait()

# Function to listen to the user's voice command
def listen(mic_index=None):
    try:
        mic = sr.Microphone(device_index=mic_index)
        print("Microphone successfully initialized.")
    except Exception as e:
        print(f"Error initializing microphone: {e}")
        return None

    with mic as source:
        print("\nAdjusting for ambient noise, please wait...")
        recognizer.adjust_for_ambient_noise(source)
        print("Listening...")
        try:
            audio = recognizer.listen(source, timeout=10, phrase_time_limit=5)
            print("Recording finished.")

            try:
                command = recognizer.recognize_google(audio)
                print(f"\nUser said: {command}\n")
                return command.lower()
            except sr.UnknownValueError:
                speak("Sorry, I did not understand that.")
                return None
            except sr.RequestError:
                speak("Sorry, my speech service is down.")
                return None
        except Exception as e:
            print(f"Error during listening: {e}")
            return None

# Function to handle the command
def handle_command(command):
    if 'hello' in command:
        speak("Hello! How can I help you?")
    elif 'time' in command:
        now = datetime.datetime.now().strftime("%H:%M")
        speak(f"The current time is {now}")
    elif 'date' in command:
        today = datetime.datetime.today().strftime("%B %d, %Y")
        speak(f"Today's date is {today}")
    elif 'search for' in command:
        search_query = command.replace("search for", "").strip()
        url = f"https://www.google.com/search?q={search_query}"
        speak(f"Searching for {search_query}")
        webbrowser.open(url)
    elif 'exit' in command:
        speak("Goodbye!")
        return False
    else:
        speak("Sorry, I didn't catch that. Please try again.")

    return True

# Main function to run the voice assistant
speak("Voice Assistant Initialized. How can I help you?")
while True:
    command = listen()
    if command:
        if not handle_command(command):
            break
